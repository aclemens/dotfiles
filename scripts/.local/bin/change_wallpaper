#!/bin/bash

set -euo pipefail
source "$HOME/.bash_functions"

WALLPAPER_DIR="$HOME/Pictures/wallpapers"
CURRENT_WALLPAPER="$WALLPAPER_DIR/current_wallpaper"
UEBERZUG_TMP_DIR="/tmp"

check_dependencies hyprctl hyprpaper ueberzugpp uuidgen fzf
check_paths "$WALLPAPER_DIR"

UB_PID_FILE="$UEBERZUG_TMP_DIR/.$(uuidgen)"
ueberzugpp layer --no-stdin --silent --use-escape-codes --pid-file "$UB_PID_FILE"
UB_PID=$(cat "$UB_PID_FILE")
export SOCKET="$UEBERZUG_TMP_DIR"/ueberzugpp-"$UB_PID".socket

cleanup() {
  ueberzugpp cmd -s "$SOCKET" -a exit
}
trap cleanup HUP INT QUIT TERM EXIT

selected_wallpaper=""
start_dir="$WALLPAPER_DIR"

# check if a parameter is given, if so check if it's a valid file or if it's a valid directory
if [ $# -eq 1 ]; then
  if [ -f "$1" ]; then
    selected_wallpaper="$1"
  elif [ -d "$1" ]; then
    start_dir="$1"
  fi
fi

if [ -z "$selected_wallpaper" ]; then
  image_extensions="jpg|jpeg|png|gif|bmp|tiff|webp"
  selected_wallpaper=$(find -L "$start_dir" -type f -regextype posix-egrep -iregex ".*\.($image_extensions)$" 2>/dev/null |
    fzf --reverse --preview="ueberzugpp cmd -s $SOCKET -i fzfpreview -a add \
                              -x \$FZF_PREVIEW_LEFT -y \$FZF_PREVIEW_TOP \
                              --max-width \$FZF_PREVIEW_COLUMNS --max-height \$FZF_PREVIEW_LINES \
                              -f {}") || exit 1
fi

echo "Setting wallpaper to $selected_wallpaper"
ln -fs "$selected_wallpaper" "$CURRENT_WALLPAPER"
hyprctl -q hyprpaper reload ",${CURRENT_WALLPAPER}"

cleanup
